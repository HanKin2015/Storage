# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = gtest/

# Where to find user code.
USER_DIR = ../../hello_gtest

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
#CPPFLAGS = -std=gnu++11 
CPPFLAGS = -g -Wall -Wextra -pthread -m64  -fpermissive
CPPFLAGS += -Wno-unused-function -DNMSD_UNIT_TEST -DDEBUG -Wall -Wsign-compare -Wshadow -Wl,--wrap,malloc
CPPFLAGS += -I$(GTEST_DIR)/include -I$(GTEST_DIR) 
CPPFLAGS += -I/src/vt/include -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/glib-2.0
CPPFLAGS += -I. -I.. -I../../../ -I../../../include -I$(USER_DIR)/
#CPPFLAGS += -I$(USER_DIR)/srv

# Flags passed to the C++ compiler.
CXXFLAGS +=  

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TARGET = hello_gtest

USER_SRCS := $(wildcard $(USER_DIR)/*.c) $(wildcard)
USER_OBJS = $(patsubst %.c,%.o,$(USER_SRCS))
USER_GCDA = $(patsubst %.c,%.gcda,$(USER_SRCS))
USER_GCNO = $(patsubst %.c,%.gcno,$(USER_SRCS))

USER_CXXFLAGS = -fprofile-arcs -ftest-coverage

# House-keeping build targets.

all : run gcov

info :
	@echo "CXX:"$(CXX)
	@echo "CPPFlAGS:"$(CPPFLAGS)
	@echo "srcs"
	@echo $(USER_SRCS)
	@echo "objs"
	@echo $(USER_OBJS)
	@echo $(USER_GCDA)

clean :
	rm -f $(TARGET) *.o
	rm -f $(USER_OBJS)
	rm -rf *.gcov
	rm -rf *.gcno
	rm -rf *.gcda
	rm -f $(USER_GCDA)
	rm -f $(USER_GCNO)
	rm -rf tmp/ 
	#rm -rf *.a

$(TARGET).o : $(TARGET).cpp
	$(CXX) $(CPPFLAGS)  -c $(TARGET).cpp

$(USER_OBJS):%.o:%.c
	$(CXX) -c $(CPPFLAGS) $(USER_CXXFLAGS) $(CXXFLAGS) $< -o $@

$(TARGET) :$(TARGET).o $(USER_OBJS) 
	$(CXX) $(CPPFLAGS) $(USER_CXXFLAGS) $(CXXFLAGS) $^ -o $@ gtest/lib/libgtest.a

run: $(TARGET)
	./$(TARGET)

gcov: 
	gcov $(USER_SRCS)
	mkdir -p tmp/
#	lcov -d $(USER_DIR) -b $(USER_DIR) -c -o tmp/nmsd_result.info 
#	lcov -d $(USER_DIR)/bulk_only/ -b $(USER_DIR)/ -c -o tmp/bulk_result.info 
#	lcov -d $(USER_DIR)/scsi/ -b $(USER_DIR)/  -c -o tmp/scsi_result.info 
#	lcov -a tmp/nmsd_result.info -a tmp/bulk_result.info -a tmp/scsi_result.info -o tmp/total.info
#	genhtml -o tmp/nmsd/ tmp/total.info 
	echo $(USER_SRCS)
