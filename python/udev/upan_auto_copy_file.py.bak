# python检测U盘的插入，以及进行自动复制文件并写入文件

# 技术要点分析：
# 1.如何检测有U盘的插入。
# 2.如何复制U盘里面的东西
# 3.如果U盘可写，如何写入文件到U盘里面。

from time import sleep
from shutil import copytree
from psutil import disk_partitions
import logging
import os
import shutil
from os.path import join, getsize
import time

# U盘内容拷贝到指定路径
upan_to_path = 'D:/usb/'

if not os.path.exists(upan_to_path):
    os.makedirs(upan_to_path)

logger = logging.getLogger()
logger.setLevel(logging.INFO)
log_file_abs = 'D:/usb/upan_auto_copy_file.log'
 
stream_handler = logging.StreamHandler()
 
handler = logging.FileHandler(log_file_abs, mode='a', encoding='UTF-8')
handler.setLevel(logging.DEBUG)

stream_format = logging.Formatter("%(asctime)s - %(pathname)s[line:%(lineno)d] - %(levelname)s: %(message)s")

logging_format = logging.Formatter(
    '%(asctime)s - %(pathname)s - %(funcName)s - [line:%(lineno)s] - %(levelname)s: %(message)s')
 
handler.setFormatter(logging_format) 
stream_handler.setFormatter(stream_format)
 
logger.addHandler(handler)
logger.addHandler(stream_handler)

#logging.basicConfig(level=logging.INFO,
#                    format='%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s',
#                    datefmt='%a, %d %b %Y %H:%M:%S',
#                    filename='D:/usb/upan_auto_copy_file.log',
#                    filemode='a')

# 检测次数
check_times = 1

while check_times:
    logger.info('检测第{}次:'.format(check_times))
    check_times += 1
    
    # 设置休眠时间
    sleep(1)
    
    # 检测所有的驱动器，进行遍历寻找哦
    for item in disk_partitions():
        logger.info('device: {}, opts: {}'.format(item.device, item.opts))
        if 'removable' in item.opts:
            driver, opts = item.device, item.opts
            # 输出可移动驱动器符号
            logger.info('发现usb驱动:'.format(driver))
            check_times = 0
            break
        # 没有找到可输出驱动器
        else:
            logger.info('没有找到可移动驱动器')
            continue

# 复制移动驱动器的根目录
upan_file_to_path = 'D:/usb/content/'
if os.path.exists(upan_file_to_path):
    shutil.rmtree(upan_file_to_path)
logger.info('开始复制...')
begin_time = time.time()
try:
    copytree(driver, upan_file_to_path )
except Exception as ex:
    logger.error('shutil.Error, error={}'.format(ex))
end_time = time.time()
logger.info('请注意,你的U盘里文件已经全部被我复制')

if opts == 'rw, remoevable':
    logger.info('usb ok .....')
    with open(driver + 'wring.txt', 'w', encoding='utf8') as fp:
        fp.write('请注意,你的U盘里文件已经全部被我复制')

def get_dir_size(dir):
    size = 0
    for root, dirs, files in os.walk(dir):
        size += sum([getsize(join(root, name)) for name in files])
    return size
    
if __name__ == '__main__':
    size = get_dir_size(upan_file_to_path )
    
    dir_size = round(size / 1024 / 1024, 3)
    spe_time = round(end_time - begin_time, 3)
    ave_speed = round(dir_size  / spe_time, 3)
    logger.info('There are {} MB in {}, spent time {} s, average speed is {} MB/s.'format(dir_size, upan_file_to_path, spe_time, ave_speed))